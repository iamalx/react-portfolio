{"version":3,"sources":["components/about-me.js","components/input-field.js","components/form.js","components/contact.js","components/intro.js","components/stack.js","components/portfolio.js","App.js","reportWebVitals.js","index.js"],"names":["AboutMe","className","TextField","forwardRef","ref","label","props","useField","field","meta","name","htmlFor","touched","error","autoComplete","component","schema","yup","Name","min","required","Email","email","Subject","Body","ContactForm","handleSubtmit","mobileHg","inputRef","useRef","initialValues","validationSchema","onSubmit","values","resetForm","formik","isdirty","dirty","toString","type","Button","variant","disabled","isValid","console","log","Contact","val","Intro","useState","h1","setH1","h2","setH2","h2Second","setH2Second","finalString","useEffect","index","interval","setInterval","concat","charAt","length","clearInterval","Stack","projects","title","text","link","linkName","Portfolio","Container","Row","map","elem","Col","xs","sm","md","Card","style","width","Title","Text","Link","target","href","App","setMobileHg","portfolioRef","aboutMeRef","contactRef","handleScroll","current","scrollIntoView","handleResize","window","innerWidth","_","addEventListener","Nav","activeKey","Item","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5821eb3d.chunk.js","sourcesContent":["import '../App.css';\r\n// import { useState } from 'react';\r\n\r\nconst AboutMe = () => {\r\n\r\n    // const [ userList, setUserList ] = useState([])\r\n\r\n    return (\r\n        <div className='error-bar  white-font '>\r\n            <h2 className='sub-font mb-4 pt-2'><u>More About Me</u></h2>\r\n            <p>\r\n                I'm ambitious, creative, innovation-focused, avid programmer,\r\n                and experienced in high-impact startups. I have a dual background in\r\n                business and software development which created the foundation to\r\n                lead and support technical teams through effective communication\r\n                to produce high-quality solutions.\r\n            </p>\r\n            <p>  \r\n                I have build apps from scratch, collaborating with designers, marketers,\r\n                and full-stack engineers to build world-class technology.\r\n                In addition, I have built web apps, hybrid mobile\r\n                and smartwatch applications with their backends using various frameworks.\r\n            </p>\r\n            <p>  \r\n                I'm passionate about opportunities that improve my skill\r\n                sets and challenge me, specfically working under experienced and collaborative\r\n                team members, to accomplish the impossible.           \r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutMe;\r\n","import '../App.css';\r\nimport { ErrorMessage, useField } from 'formik';\r\nimport { forwardRef } from 'react';\r\n\r\nconst TextField = forwardRef(({ label, ...props }, ref ) => {\r\n\r\n    const [ field, meta ] = useField(props)\r\n\r\n    // return input box or textarea box\r\n    if(props.name !== 'Body') {\r\n        return (\r\n            <div className='form-container' >\r\n                <label htmlFor={field.name} >{label}</label>\r\n                <input className={`${meta.touched && meta.error && 'error-bar'}`}\r\n                    autoComplete='false'\r\n                    {...field}{...props}\r\n                />\r\n                <ErrorMessage component='div' className='error-text' name={field.name} />\r\n            </div>\r\n        ) \r\n    } else {\r\n        return (\r\n            <div className='form-container' >\r\n                <label htmlFor={field.name} >{label}</label>\r\n                <textarea className={`${meta.touched && meta.error && 'error-bar'}`}\r\n                    autoComplete='false'\r\n                    {...field}{...props}\r\n                ></textarea>\r\n                <ErrorMessage component='div' className='error-text' name={field.name} />\r\n            </div>\r\n        ) \r\n    }\r\n\r\n}) \r\n\r\nexport default TextField;\r\n","import '../App.css';\r\nimport * as yup from 'yup';\r\nimport { Formik, Form } from 'formik';\r\nimport TextField from './input-field';\r\nimport { useRef } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst schema = yup.object({\r\n    Name: yup.string().min(2).required(),\r\n    Email: yup.string().email().required(), \r\n    Subject: yup.string().min(2).required(),\r\n    Body: yup.string().min(2).required(),\r\n});\r\n\r\n\r\nconst ContactForm = ({ handleSubtmit, mobileHg }) => {\r\n\r\n    const inputRef = useRef(null)\r\n    \r\n    const saveUser = (data) => {\r\n        handleSubtmit(data)\r\n    } \r\n    // parent component of input \r\n    return (\r\n        <Formik\r\n            initialValues = {{\r\n                Name: '', \r\n                Email: '',\r\n                Subject: '',\r\n                Body: '',\r\n            }}\r\n            validationSchema={schema}\r\n            onSubmit={(values, { resetForm }) => {\r\n                saveUser(values)\r\n                resetForm()\r\n            }}\r\n        >\r\n            {formik => (\r\n                <div className={`white-font  ${mobileHg <= 768 ?  'width-100' : 'cl-width'}`}>\r\n                    <h2 className='sub-font mb-4 pt-2'><u>Contact Me</u></h2>\r\n                    <Form className='form-container'>\r\n                        <TextField label='First Name'\r\n                            isdirty={formik.dirty.toString()} \r\n                            name='Name' \r\n                            type='text'\r\n                            ref={inputRef}\r\n                        ></TextField>\r\n                        <TextField label='Email'\r\n                            isdirty={formik.dirty.toString()}\r\n                            name='Email'\r\n                            type='email'\r\n                        ></TextField>\r\n                        <TextField \r\n                            label='Subject'\r\n                            isdirty={formik.dirty.toString()}\r\n                            name='Subject'\r\n                            type='text'\r\n                        ></TextField>\r\n                        <TextField label='Body' \r\n                            isdirty={formik.dirty.toString()}\r\n                            name='Body'\r\n                            type='text'\r\n                        ></TextField>\r\n                        \r\n                        <Button variant=\"light\"\r\n                            type='submit' \r\n                            disabled={formik.isValid & formik.dirty ? false: true}\r\n                            >Light\r\n                        </Button>\r\n\r\n                    </Form>\r\n                </div>\r\n                )\r\n            }            \r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default ContactForm;","import '../App.css';\r\n// import { useState, useEffect } from 'react';\r\n\r\nimport ContactForm from '../components/form';              \r\n\r\nconsole.log(ContactForm)\r\nconst Contact = ( { mobileHg } ) => {\r\n\r\n    const handleSubtmit = (val) => {\r\n        // TODO: set up email API\r\n        // console.log(val)\r\n    }  \r\n    \r\n    return (\r\n        <div className={`error-bar pb-3 hr-center`}>\r\n            <ContactForm handleSubtmit={handleSubtmit} mobileHg={mobileHg}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import '../App.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Intro = () => {\r\n\r\n    const [ h1, setH1 ] = useState(' ')\r\n    const [ h2, setH2 ] = useState(' ')\r\n    const [ h2Second, setH2Second ] = useState('')\r\n\r\n    const finalString = \"Hello World! I'm Alex, an avid software developer.\"\r\n\r\n    useEffect(() => {\r\n        // Intro \"Hello World\" animations\r\n        let index = 0\r\n        let interval = setInterval(() => {\r\n\r\n            if(index <= 12 )\r\n                setH1(val => setH1(val.concat(finalString.charAt(index))))\r\n            else if(index <= 22 )\r\n                setH2(val => setH2(val.concat(finalString.charAt(index))))\r\n            else \r\n                setH2Second(val => setH2Second(val.concat(finalString.charAt(index))))\r\n        \r\n            if(index >= finalString.length) {\r\n                index = 0\r\n                clearInterval(interval) \r\n            }\r\n        \r\n            index++\r\n        }, 100)\r\n    \r\n    }, []) \r\n        \r\n    return (\r\n        <div className='error-bar white-font intro-mn-hg' >\r\n            <h1 className='h-font white-font'>{h1? h1:' '}</h1>\r\n            <p className='main-font'>{h2? h2:' '}</p>\r\n            <p className='main-font'>{h2Second? h2Second:' '}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Intro;\r\n","import '../App.css';\r\n// import { useState } from 'react';\r\n\r\nconst Stack = () => {\r\n    \r\n    return (\r\n        <div className='error-bar ' >\r\n            {/* <h2>hhhh</h2> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stack;\r\n","import '../App.css';\r\n// import { useState } from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst projects = [\r\n    {\r\n        title: 'My Portfolio ',\r\n        text: 'Responsive web app build with React + Bootsrap for a great UX.',\r\n        link: 'https://github.com/iamalx/react-portfolio',\r\n        linkName: 'Repo'\r\n    },\r\n    {\r\n        title: 'Machine Learning',\r\n        text: 'Engineered data model to predict sales success',\r\n        link: 'https://github.com/iamalx/machine-learning',\r\n        linkName: 'Repo'\r\n    },\r\n    {\r\n        title: 'Data Analytics',\r\n        text: 'Digital Analytics for Google & Facebook Ads to provide insights.',\r\n        link: 'https://github.com/iamalx/digital_analytics_python',\r\n        linkName: 'Repo'\r\n    },\r\n    {\r\n        title: 'Project Automation',\r\n        text: 'Asana API script to automate tasks for a smooth project management',\r\n        link: 'https://github.com/iamalx/asana_api_automation',\r\n        linkName: 'Repo'\r\n    },\r\n    {\r\n        title: 'Restful API Backend',\r\n        text: 'End-points using Node, Express, MongoDb, + to facilitate shopping.',\r\n        link: 'https://github.com/iamalx/node_app',\r\n        linkName: 'Repo'\r\n    },\r\n    {\r\n        title: 'Hybrid App Apprenticeship',\r\n        text: 'App built with Ionic + Angular to help Veterans.',\r\n        link: 'https://github.com/iamalx/reboot-frontend',\r\n        linkName: 'Repo'\r\n    },\r\n    \r\n]\r\n\r\nconst Portfolio = () => {\r\n\r\n    return (\r\n        <div className='error-bar pb-5' >\r\n            <h2 className='sub-font mb-4'><u>Portfolio</u></h2>\r\n            <Container>\r\n                <Row>\r\n                    {projects.map(elem => (\r\n                        <Col key={elem.title} xs={12} sm={6} md={4} className='mb-5'>\r\n                            <Card style={{ width: '100%' }} className='card-effects'>\r\n                                <Card.Body>\r\n                                    <Card.Title>{elem.title}</Card.Title>\r\n                                        <Card.Text>\r\n                                            {elem.text}\r\n                                        </Card.Text>\r\n                                    <Card.Link target='_blank' href={elem.link}>{elem.linkName}</Card.Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ))}                  \r\n                </Row>\r\n            </Container>\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Portfolio;\r\n","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useState, useEffect, useRef } from 'react';\r\n\r\nimport AboutMe from './components/about-me';\r\nimport Contact from './components/contact';\r\nimport Intro from './components/intro';\r\nimport Stack from './components/stack';\r\nimport Portfolio from './components/portfolio';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [ mobileHg, setMobileHg ] = useState(false)\r\n\r\n    const portfolioRef = useRef(null)\r\n    const aboutMeRef = useRef(null)\r\n    const contactRef = useRef(null)\r\n\r\n    const handleScroll = (ref) => {\r\n        ref.current.scrollIntoView() \r\n    }\r\n    \r\n    //choose the screen size \r\n    const handleResize = () => {\r\n        setMobileHg(window.innerWidth)\r\n    }\r\n\r\n    useEffect( _ => {\r\n        handleResize()\r\n        window.addEventListener(\"resize\", handleResize)\r\n    })\r\n    \r\n    return (\r\n        <div>\r\n            <div className='marine-blue'>\r\n            <Container>\r\n                <Nav className=\"justify-content-end\" activeKey=\"/home\">\r\n                    <Nav.Item>\r\n                        <Nav.Link \r\n                            className=' lightgrey-font' \r\n                            onClick={() => handleScroll(portfolioRef)}\r\n                            >Portfolio\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link\r\n                            className=' lightgrey-font'\r\n                            onClick={() => handleScroll(aboutMeRef)}\r\n                            >About Me\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link \r\n                            className=' lightgrey-font'\r\n                            onClick={() => handleScroll(contactRef)}\r\n                            >Contact\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                \r\n                    </Nav>\r\n            </Container>\r\n            </div>\r\n            <div className='marine-blue viewport-hg top-diagonal-wr vr-center'>\r\n            <Container className='top-diagonal-in'>\r\n                        {mobileHg <= 766 ?\r\n                            <Row>      \r\n                                <Col md={12} >\r\n                                    <Intro />\r\n                                </Col>\r\n                                <Col md={12}> \r\n                                    <Stack />\r\n                                </Col>\r\n                            </Row>\r\n                        :\r\n                            <Row>  \r\n                                <Col >\r\n                                    <Intro />\r\n                                </Col>\r\n                                <Col > \r\n                                    <Stack />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        }\r\n                </Container>\r\n            </div>\r\n            <div className='' ref={portfolioRef}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Portfolio />   \r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <div className={`marine-blue ${mobileHg >= 990 && 'viewport-hg'}  vr-center top-diagonal-wr  `}>\r\n                <Container className='top-diagonal-in'>\r\n                    {mobileHg <= 766  ?\r\n                                <Row>      \r\n                                    <Col sm={12}>\r\n                                        <div ref={aboutMeRef} >\r\n                                            <AboutMe />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col sm={12}> \r\n                                        <div ref={contactRef} >\r\n                                            <Contact mobileHg={mobileHg} />\r\n                                        </div>                                        \r\n                                    </Col>\r\n                                </Row>\r\n                            :\r\n                                <Row>  \r\n                                    <Col > \r\n                                        <div ref={aboutMeRef} >\r\n                                            <AboutMe />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col > \r\n                                        <div ref={contactRef} >\r\n                                            <Contact mobileHg={mobileHg}/>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                    }\r\n                </Container> \r\n                \r\n            </div>\r\n            <Container >  \r\n                <div>\r\n                    <small> UI built with React & Bootstrap. Deployed with Firebase</small>\r\n                </div> \r\n                </Container>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}